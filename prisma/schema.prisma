datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---　ユーザー ---
model Profile {
  id        String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  mail      String?
  chatRoom  ChatRoom[]

  @@map("profile")
}

// ---　チャットルーム ---
model ChatRoom {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  title       String
  profileId   String        @map("profile_id") @db.Uuid
  profile     Profile       @relation(fields: [profileId], references: [id], onDelete: Cascade)
  chatMessage ChatMessage[]

  @@map("chat_room")
}

// ---　チャットメッセージ ---
model ChatMessage {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  message    String
  role       String
  chatRoomId String   @map("chat_room_id") @db.Uuid
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("chat_message")
}
